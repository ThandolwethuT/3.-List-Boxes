<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>